{"version":3,"file":"static/webpack/static/development/pages/channel.js.b85384c01949f2835611.hot-update.js","sources":["webpack:///./pages/_error.js","webpack:///./pages/channel.js"],"sourcesContent":["import React from 'react'\nimport Layout from '../components/Layout'\nimport { Link } from '../routes'\n\nexport default class Error extends React.Component {\n  static getInitialProps({ res, err }) {\n    const statusCode = res ? res.statusCode : err ? err.statusCode : null;\n    return { statusCode }\n  }\n\n  render() {\n    const { statusCode } = this.props\n\n    return (\n      <Layout title=\"Oh no :(\">\n        { statusCode === 404 ?\n          <div className=\"message\">\n            <h1>Esta página no existe :(</h1>\n            <p><Link route=\"home\"><a>Volver a la home</a></Link></p>\n          </div>\n          :\n          <div className=\"message\">\n            <h1>Hubo un problema :(</h1>\n            <p>Intenta nuevamente en unos segundos</p>\n          </div>\n         }\n         <style jsx>{`\n          .message {\n            padding: 100px 30px;\n            text-align: center;\n          }\n          h1 {\n            margin-bottom: 2em;\n          }\n          a {\n            color: #8756ca;\n          }\n         `}</style>\n      </Layout>\n    )\n  }\n}","import 'isomorphic-fetch'\nimport Layout from '../components/Layout'\nimport ChannelGrid from '../components/ChannelGrid'\nimport PodcastList from '../components/PodcastList'\nimport PodcastListWithClick from '../components/PodcastListWithClick'\nimport PodcastPlayer from '../components/PodcastPlayer'\nimport Error from './_error'\n\nexport default class extends React.Component {\n\n  constructor(props) {\n    super(props)\n    this.state = { openPodcast: null }\n  }\n\n  static async getInitialProps({ query, res }) {\n    let idChannel = query.id\n\n    try {\n      let [reqChannel, reqSeries, reqAudios] = await Promise.all([\n        fetch(`https://api.audioboom.com/channels/${idChannel}`),\n        fetch(`https://api.audioboom.com/channels/${idChannel}/child_channels`),\n        fetch(`https://api.audioboom.com/channels/${idChannel}/audio_clips`)\n      ])\n\n      if( reqChannel.status >= 400 ) {\n        res.statusCode = reqChannel.status\n        return { channel: null, audioClips: null, series: null, statusCode: reqChannel.status }\n      }\n\n      let dataChannel = await reqChannel.json()\n      let channel = dataChannel.body.channel\n\n      let dataAudios = await reqAudios.json()\n      let audioClips = dataAudios.body.audio_clips\n\n      let dataSeries = await reqSeries.json()\n      let series = dataSeries.body.channels\n\n      return { channel, audioClips, series, statusCode: 200 }\n    } catch(e) {\n      return { channel: null, audioClips: null, series: null, statusCode: 503 }\n    }\n  }\n\n  openPodcast = (event, podcast) => {\n    if ( event.metaKey || event.ctrlKey || event.shiftKey || (event.nativeEvent && event.nativeEvent.which === 2) ) {\n      // Si está haciendo Ctrl+Click o Cmd+Click, dejamos que el click suceda normalmente\n      return\n    }\n\n    event.preventDefault()\n    this.setState({\n      openPodcast: podcast\n    })\n  }\n\n  closePodcast = (event) => {\n    event.preventDefault()\n    this.setState({\n      openPodcast: null\n    })\n  }\n  \n  render() {\n    const { channel, audioClips, series, statusCode } = this.props\n    const { openPodcast } = this.state\n\n    if( statusCode !== 200 ) {\n      return <Error statusCode={ statusCode } />\n    }\n\n    return <Layout title={channel.title}>\n\n      { openPodcast && \n        <PodcastPlayer clip={ openPodcast } onClose={ this.closePodcast } />\n      }\n\n      <div className=\"banner\" style={{ backgroundImage: `url(${channel.urls.banner_image.original})` }} />\n      \n      <h1>{ channel.title }</h1>\n\n      { series.length > 0 &&\n        <div>\n          <h2>Series</h2>\n          <ChannelGrid channels={ series } />\n        </div>\n      }\n\n      <h2>Ultimos Podcasts</h2>\n      <PodcastListWithClick podcasts={ audioClips } onClickPodcast={ this.openPodcast } />\n\n      <style jsx>{`\n        .banner {\n          width: 100%;\n          padding-bottom: 25%;\n          background-position: 50% 50%;\n          background-size: cover;\n          background-color: #aaa;\n        }\n        h1 {\n          font-weight: 600;\n          padding: 15px;\n        }\n        h2 {\n          padding: 15px;\n          font-size: 1.2em;\n          font-weight: 600;\n          margin: 0;\n        }\n      `}</style>\n    </Layout>\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAMA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AATA;AAAA;AA0BA;;;AAnCA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;;;;AAJA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAGA;AACA;AA9CA;AAgDA;AACA;AAAA;AACA;AADA;AAGA;AACA;AAnDA;AAAA;AAAA;AAFA;AAGA;AACA;;;AAkDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAlBA;AAAA;AAwCA;;;;;;;;;;AAjGA;AACA;;;AAGA;AACA;;;;AADA;AAAA;AAAA;AACA;AAKA;;;;;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AAEA;AACA;;AADA;AACA;;AAEA;AACA;;AADA;AACA;;AAEA;AACA;;AADA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AAlCA;AACA;;;;;A","sourceRoot":""}